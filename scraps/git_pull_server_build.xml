<?xml version="1.0"?>

<project name="git_pull_server">

<property name="repo.dir" value=".." />
<!--<property name="repo.dir" value="phing_build" />-->
<resolvepath propertyName="repo.dir.resolved" file="${repo.dir}" />

<target name="msg">
    <echo msg="    Usage: phing pulloriginmaster  [pulls master branch]" />
    <echo msg="OR  Usage: phing pulloriginbranch -DBRANCH=branchname  [pulls named branch]" />
</target>

<!--fileset for what to copy over to webroot from cloned git codebases-->
<fileset dir="phing_build" id="allfiles">
    <include name="**" />

    <!--files in cloned git copy to exclude-->
    <!--(could also, with git ignore rules, exclude things from the
    repository *anyway* in which case this would be an extra safety step)-->
    <!--
    <exclude name=".htaccess" />
    <exclude name="cp/.htaccess" />
    -->
    
    <!--ignore Zend Studio project cruft-->
    <exclude name=".project" />
    <exclude name=".buildpath" />
    <exclude name=".settings" />
    
    <exclude name=".git" />	<!--hmmm...-->

    <!--folders in webroot to exclude-->
    <!--(could also, with git ignore rules, exclude things from the
    repository *anyway* in which case this would be an extra safety step)-->
    <!--
    <exclude name="img/**" />
    <exclude name="cp/img/**" />
    <exclude name="pdfs/**" />
    -->
</fileset>



<target name="gitpull">
    <!--<delete dir="phing_build" />-->  <!--just in case lingering from last pull-->
    <!--<mkdir dir="phing_build" />-->
    
    

    <if>
        <isset property="BRANCH" />
        <then>
            <property name="gitBranchName"  value="${BRANCH}"  />
        </then>
        <else>
            <property name="gitBranchName"  value="master"  />
        </else>
    </if>

	<!--
    <svnexport username="theusername" repositoryurl="svn+ssh://theusername@localhost/srv/svn/thereponame/${trunkOrBranchBit}" todir="phing_build"/>
	-->
	
	<!-- Fetch objects from all remotes -->
<!--
<gitfetch
    repository="${repo.dir.resolved}" all="true" />
-->


<!-- pull (from *all* remotes) into local branch -->
        <!--<gitpull repository="${repo.dir.resolved}" all="true" />-->

        
        

        <!-- clone into dir="phing_build" -->
        
        
        <!-- Clone repository -->
		<!--<gitclone repository="/home/theusername/gitrepos/reponame.git" targetPath="${repo.dir.resolved}" />-->
        
		<!-- switch to appropriate branch -->
        <!--<gitcheckout repository="${repo.dir.resolved}" branchname="${gitBranchName}" forceCreate="true" quiet="true"  />-->

	<!-- pull (from matching branch of *all* remotes) into current branch -->
        <gitpull repository="${repo.dir.resolved}" all="true"  />

	
</target>

<!--<target name="copyover" depends="gitpull">-->
<target name="copyover" depends="gitpull">
	<!--
    <copy todir="..">
        <fileset refid="allfiles" />
    </copy>
    -->
</target>

<target name="git_y" depends="copyover">
    <!--<delete dir="phing_build" />-->
    
    <!--phing *possibly* executed as root so...-->
    
    <!--
    <exec command="chown theusername -R *" dir=".." />
    <exec command="chgrp theusername -R *" dir=".." />
    -->
    
</target>

<target name="git_n">
    <echo msg="Probably wise anyway, have a nice day." />
</target>

<target name="pulloriginmaster">
    <input propertyname="chosenTarget" validargs="y,n">Do you *really* want to deploy the Git repo's master branch? Only the very brave (or foolish) attempt this!
    </input>

    <phingcall target="git_${chosenTarget}" />
</target>

<target name="pulloriginbranch">
<fail message="Sorry, pulling from non-master branches not yet implemented" />
    <fail unless="BRANCH" message="Branch not specified! Use: phing pulloriginbranch -DBRANCH=branchname" />

    <!-- above fail task won't catch [phing pulloriginbranch -DBRANCH=] (ie. branch specified but empty) so... -->
    <if>
        <equals arg1="${BRANCH}" arg2="" />
        <then>
            <fail message="You specified an empty branch name! Use: phing pulloriginbranch -DBRANCH=branchname " />
        </then>
    </if>

    <input propertyname="chosenTarget" validargs="y,n">Do you *really* want to deploy the Git repo's '${BRANCH}' branch? Only the very brave (or foolish) attempt this!
    </input>

    <phingcall target="git_${chosenTarget}" />
</target>

</project>
